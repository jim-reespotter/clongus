# Task to manage members of a departments
#
# - CSV connection (HRFiles)
#   - List of members and their dept (csv query - HRDepts)
#     - list of members who should be in a specific group (filter query) - source
# 
# - Ldap connection
#   - List of groups (ldap search query) - we're going to iterate over these
#   - List of current members in a specific group (ldap object query) - target
#
# - Match
#   - list of members who should be in a group
#   - list of AD users
#
# - Task:
#   - get a list of groups:
#     - list of groups (LDAP)
#   - for each item:
#     - list of ad users who should be that group (source)
#     - list of current members (target)
#
#
#
---
ADDepartmentMembershipManagement:
- connection: &HRFiles
    !FileConnection
    name: HR_files
    description: file location for HR files
    path: configs/

- query: &HREmployees
    !CsvQuery
    name: HR_Employees
    description: CSV file of employees
    connection: *HRFiles
    filename: employees.csv
    headers: no
#    file: (fileName)
    fields:
    - name: employeeID
   #   type: caseInsensitiveString
    - name: firstname
  #    type: caseSensitiveString
    - name: surname
 #     type: caseSensitiveString
    - name: startDate
    #  type: date
     # format: YYYY-mm-dd
    - name: endDate
      #type: date
#      format: YYYY-mm-dd
    - name: department
#      format: CaseInsensitiveString
    - name: role
#      format: CaseInsensitiveString

#- query: &EmployeesByGroup
#    !FilterQuery
#    query: *HREmployees

- connection: &LDAP_RP
    !LdapConnection
    name: AD_LDAP
    description: Read-write access to LDAP
    url: ldaps://192.168.0.3
    cert: xxx
    credential:
      username: CN=sta_ldap,OU=testingStuff,DC=reespotter,DC=home
      password: asdf345SDFg345SD
    baseDN: DC=reespotter,DC=home

- query: &ADEmployees
    !LdapObjectQuery
    ## LDAP lookup
    name: AD_users_employees
    description: Read-write access to manage users in employee OU
    connection: *LDAP_RP
    subOU: OU=test employees,OU=testingStuff
    filter: (objectClass=user)
    scope: SUBTREE

- query: &UsersByGroup
    !MatchQuery
    source: 
      query: *HREmployees
      send: 
      - department
    target: 
      query: *ADEmployees
      ## don't need to filter here but you can...
      ##send:
      ##- department -- doesn't work in our case because feilds don't match exactly
    matchers:
    - !RegexMatcher
      name: match employeeid
      sourceSignature:
        attributes: 
        - employeeID
      targetSignature:  
        attributes: 
        - employeeID
#    release:
#      name: target.name
#      dn: target.distinguishedName

- query: &ADDeptGroups
    ## LDAP lookup
    !LdapObjectQuery
    name: AD_department_groups
#    description: Read-write access to manage groups in department OU
    connection: *LDAP_RP
    subOU: OU=departments,ou=groups,OU=testingStuff
    filter: (objectClass=group)
    scope: SUBTREE

- query: &GroupMembers
    !LdapAttributeQuery
    name: group members
    connection: *LDAP_RP
    ou: OU=departments,OU=groups,OU=testingStuff
    attribute: member
 
- task:
    !ForEachTask
    name: manage department group membership - iterate through all groups, check membership
    forEach: 
      query: *ADDeptGroups
      release:
        dn: distinguishedName
        department: cn
        ## predefined param for LdapAttributeQuery stating details of where to write changes
        target: distinguishedName
  # filter:
    subtasks:
    - !SimpleTask
      name: update group membership
      source: 
        query: *UsersByGroup
        send:
        - department
        release:
          member: target.distinguishedName
          name: target.name
          dn: target.distinguishedName

     ##     (could we do query: send: release: as properties of source instead?)
      target: 
        query: *GroupMembers
        send: 
        - dn
      matchers:
      - !RegexMatcher
        name: match_DNs
        sourceSignature:
          attributes: 
          - member
        targetSignature:
          attributes: 
          - member
#      condition: caseInsensitiveExactMatch
      attributes:
      - !CopyAttribute
        attribute: member
        source: member
        updateAction: APPEND
        conditions:
        - CREATE
        ## how to remove them?
      - !CopyAttribute
        attribute: member
        source: member
        updateAction: REMOVE
        conditions:
        - REMOVE

