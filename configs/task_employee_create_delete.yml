## Task to create new employees. Users will be created as soon as they are seen in HR, but are disabled.
##
## Other tasks will:
## - Set account active
## - Change name, cn, dn
## - mamage groups
## - mothball account when user leaves
## - delete account 6 monhts later
##
---
ADUserMaintenance:
- connection: &HRFiles
    !FileConnection
    name: HR_files
    description: file location for HR files
    path: configs/

- connection: &LDAP_RP
    !LdapConnection
    name: AD_LDAP
    description: Connection to resspotter.home DC
    url: ldaps://192.168.0.3
    cert: xxx
    credential:
      username: CN=sta_ldap,OU=testingStuff,DC=reespotter,DC=home
      password: asdfasdfasdfasdf
    baseDN: DC=reespotter,DC=home

- query: &HREmployeesFileRead
    !FileReadQuery
    name: HR_Employees vis !FileReadQuery
    description: Pattern match file processing of below CSV
    connection: *HRFiles
    filename: employees.csv
    pattern: ^([0-9]+),([^,]+),([^,]+),([^,]*),([^,]*),([^,]+),([^,]+)
    fields:
    - name: employeeID
    - name: firstname
    - name: surname
    - name: startDate
      type: date
      format: yyyy-MM-dd
    - name: endDate
      type: date
      format: yyyy-MM-dd
    - name: department
    - name: role
    ignore:
    - ^\s*$
    - ^\/\/
    - ^#

- query: &HREmployeesCSV
    !CsvQuery
    name: HR_Employees
    description: CSV file of employees
    connection: *HRFiles
    filename: employees.csv
    headers: no
#    file: (fileName)
    fields:
    - name: employeeID
      type: caseInsensitiveString
    - name: firstname
      type: caseSensitiveString
    - name: surname
      type: caseSensitiveString
    - name: startDate
      type: date
    - name: endDate
      type: date
    - name: department
    - name: role

    ## optional means of describing - eg: firstname surname empID -> regex $1 $2 ($3)
    ## something similar for all queries? Apps through for matchedQus?
- query: &ADEmployees
    !LdapObjectQuery
    ## LDAP lookup
    name: AD_users_employees
    description: Read-write access to manage users in employee OU
    connection: *LDAP_RP
    #    subOU: OU=test employees,OU=testingStuff
    subOU: OU=testingStuff
    filter: (&(objectClass=user)(!(sAMAccountName=STA_LDAP)))
    scope: SUBTREE

- task:
    !SimpleTask
    name: emplyees_create_HR_AD
    description: create AD accounts for missing employees. Account will be disabled until start date
  
  ## for % this will be (no of changes / filtered target)*100
    thresholds:
      CREATE: 10
      UPDATE: 20%
      REMOVE: 20%

    ## source and target connections:
    source: 
      query: *HREmployeesFileRead
    target: 
      query: *ADEmployees

    matchers:
    - !AttributeValueMatcher
      name: Match employee IDs
      sourceSignature:
        attributeName: payrollNumber
      targetSignature:
        attributeName: employeeID     

    - !RegexMatcher
      name: match_employeeID
      ## TO DO: add equals type
      sourceSignature:
        attributes: 
        - employeeID
      targetSignature:
        attributes: 
        - employeeID
      ## TO DO: make this do something

    - !RegexMatcher
      name: Match first and last name
      sourceSignature:
        attributes:
        - firstname
        - surname
      targetSignature:
        attributes:
          - givenName
          - sn
      
    ## should state source or target I think (source by default?)... so also targetAttributes
    ## delimiter? default? set alt
    ## TO DO: fails (NPE) if list empty...
    filters:
    #- name: left date hasnt happened yet
    #  sourceAttributes: endDate
    #  comparator: lessThan
    #  value: today
#    - !AllowFilter
    - !RegexFilter
      name: only do removals from ou=test employees
      attributes:
      - distinguishedName
      pattern: .+test.employees.+
      conditions:
      - REMOVE
    - !AllowFilter
      conditions:
      - CREATE
      - UPDATE

    ## these are the values for each attribute for the new target thing:
    attributes:
    - !RegexAttribute
      attribute: distinguishedName
      sources: 
      - employeeID
      - firstname
      - surname
      # relative to connection, not query (so you can move up from wuery)
      pattern: (.+):(.+):(.+)
      substitution: CN=$2 $3 ($1),OU=test employees,OU=testingStuff
      conditions:
      - CREATE
      - UPDATE

## mothball the account - move to ex employees
    - !RegexAttribute
      attribute: distinguishedName
      ## these are target attributes...
      sources: 
      - cn
      # relative to connection, not query (so you can move up from wuery)
      pattern: (.+)
      substitution: CN=$1,OU=ex employees,OU=testingStuff
      conditions:
      - REMOVE

    - !LiteralAttribute
      attribute: objectClass
  #    action: append  !! TO DO: fix matching, multi things (there's an enum in ldaptive to copy maybe?) !!
      values: 
      - user
      - top
      - person
      - organizationalPerson
      # possibly need a flag to say order does not matter?
  #  - attribute: cn !! For AD, don't change CN, change DN instead !!
  #    type: regex
  #    sources: 
  #      - firstname
  #    - surname
  #    - employeeID
  #    pattern: s/(.*):(.*):(.*)/$1 $2 ($3)/
  ##      delimiter: ':' default value!
    - !RegexAttribute
      attribute: displayName
      sources: 
      - firstname
      - surname
      pattern: (.*):(.*)
      substitution: $1 $2
    - !CopyAttribute
      attribute: sn
      source: surname
    - !CopyAttribute
      attribute: givenName
      source: firstname
      conditions:
      - CREATE
      - UPDATE
    - !CopyAttribute
      attribute: employeeID
      source: employeeID
    - !RegexAttribute
      attribute: sAMAccountName
      sources: 
      - employeeID
      - firstname
      - surname
      pattern: (\w+):(\w)\w*:(\w).+
      substitution: $1$2$3
      conditions:
      - CREATE
#  - attribute: bitField
#    bit: 5
#    bitValue: true
    - !RegexAttribute
      attribute: department
      sources: 
      - department
      pattern: (\w+)(\s?\w*)
      substitution: ministry of $1$2
      conditions:
      - CREATE
      - UPDATE
## why doesn';t this work?
#    - !RegexAttribute
#      attribute: department
#      sources: 
#      - department
#      pattern: s/(\w+)/out on arse/
#      conditions:
#      - REMOVE
#    - !LiteralAttribute
#      attribute: department
#      values:
#      - none
#      ## not honouring this:
#    #  updateOption: CLEAR
#      conditions:
#      - REMOVE

    - !RandomAttribute
      attribute: userPassword
      conditions:
      - CREATE
      length: 12
      characters:
      - abcde
      - ABCDE
      - 12345

#    - !BitwiseAttribute
#      attribute: userAccountControl
#      initialLength: 16
#      set:
#        6: true
        
